<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sj.oa.project.mapper.ClassMapper">
    <resultMap id="BaseResultMap" type="Classall">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="belong_major" jdbcType="VARCHAR" property="major"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="total_number" jdbcType="INTEGER" property="totalNumber"/>
        <result column="man_number" jdbcType="INTEGER" property="manNumber"/>

        <result column="women_number" jdbcType="INTEGER" property="womenNumber"/>
        <result column="headmaster" jdbcType="VARCHAR" property="headmaster"/>

    </resultMap>

    <sql id="Base_Column_List">
        id, class_name,belong_major, grade, total_number,man_number,women_number,headmaster,major_code
    </sql>

    <!--
       根据主键查询
    -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select *
        <include refid="Base_Column_List"/>
        from t_class_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--
       查询出所有专业下的所有班级
    -->
    <select id="selectClassAndMajor" resultMap="BaseResultMap">
        select cl.id,cl.class_name,
        <include refid="Base_Column_List"/>
        from t_class_info cl
        LEFT JOIN t_major_info m on cl.major_code = m.major_code

    </select>


    <!--
      班级列表
    -->
    <select id="selectClassList" resultMap="BaseResultMap" parameterType="Classall">
        select
        <include refid="Base_Column_List"/>
        FROM t_class_info cl
        <where>
            <if test="className !=null and className !=''">
                and className LIKE concat('%',#{className},'%')
            </if>
            <if test="major !=null and major !=''">
                and belong_major LIKE concat('%',#{major},'%')
            </if>
        </where>
    </select>

    <!--
        批量删除
    -->
    <delete id="deleteByPrimaryKeys" parameterType="Integer">
        delete from t_class_info
        where id IN
        <foreach collection="array" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <!--
       添加
    -->
    <insert id="insert" parameterType="Classall">

    insert into t_class_info (class_name,belong_major, grade, total_number,man_number,women_number,headmaster.major_code)
    values (#{className,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR},
    #{totalNumber,jdbcType=INTEGER},#{manNumber,jdbcType=INTEGER},#{womenNumber,jdbcType=INTEGER},#{headmaster,jdbcType=VARCHAR},#{majorCode,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="Classall">
        insert into t_class_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test=" className != null">
                class_name,
            </if>
            <if test="major != null">
                belong_major,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="totalNumber != null">
                total_number,
            </if>
            <if test="manNumber != null">
                man_number,
            </if>
            <if test="womenNumber != null">
                women_number,
            </if>
            <if test="headmaster != null">
                headmaster,
            </if>
            <if test="majorCode != null">
                major_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="className != null">
                #{ class_name,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{  belong_major,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="totalNumber != null">
                #{total_number,jdbcType=INTEGER},
            </if>
            <if test="manNumber != null">
                #{man_number,jdbcType=INTEGER},
            </if>
            <if test="womenNumber != null">
                #{women_number,jdbcType=INTEGER},
            </if>
            <if test="headmaster != null">
                #{headmaster,jdbcType=VARCHAR},
            </if>
            <if test="majorCode != null">
                #{major_code,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Classall">

        update t_class_info
        <set>
            <if test="className != null">
                #{ class_name,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{  belong_major,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="totalNumber != null">
                #{total_number,jdbcType=INTEGER},
            </if>
            <if test="manNumber != null">
                #{man_number,jdbcType=INTEGER},
            </if>
            <if test="womenNumber != null">
                #{women_number,jdbcType=INTEGER},
            </if>
            <if test="headmaster != null">
                #{headmaster,jdbcType=VARCHAR},
            </if>
            <if test="majorCode != null">
                #{major_code,jdbcType=VARCHAR}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="Classall">
      update t_class_info
       set #{class_name,jdbcType=VARCHAR},
          #{belong_major,jdbcType=VARCHAR},
          #{grade,jdbcType=VARCHAR},
          #{total_number,jdbcType=INTEGER},
          #{man_number,jdbcType=INTEGER},
          #{women_number,jdbcType=INTEGER},
          #{headmaster,jdbcType=VARCHAR},
          #{major_code,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
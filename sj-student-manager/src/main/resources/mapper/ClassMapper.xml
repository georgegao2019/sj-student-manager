<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sj.oa.project.mapper.ClassMapper">
    <resultMap id="BaseResultMap" type="Classall">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="belong_major" jdbcType="VARCHAR" property="major"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="total_number" jdbcType="INTEGER" property="totalNumber"/>
        <result column="man_number" jdbcType="INTEGER" property="manNumber"/>

        <result column="women_number" jdbcType="INTEGER" property="womenNumber"/>
        <result column="headmaster" jdbcType="VARCHAR" property="headmaster"/>

    </resultMap>

    <sql id="Base_Column_List">
        depId, leader,deptName, introduce, d.createTime,d.status
    </sql>

    <!--
       根据主键查询
    -->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select u.uid,u.name,
        <include refid="Base_Column_List"/>
        from t_dept d
        LEFT JOIN t_user u on d.depId=u.dept
        where depId = #{depId,jdbcType=VARCHAR}
    </select>

    <!--
       检验部门唯一性
    -->
    <select id="checkDeptNameUnique" parameterType="String" resultMap="BaseResultMap">
    select * from t_dept d
    where deptName=#{deptName}
  </select>


    <!--
       查询出所有部门下的所有用户
    -->
    <select id="selectDeptAndUser" resultMap="BaseResultMap">
        select u.uid,u.name,
        <include refid="Base_Column_List"/>
        from t_dept d
        LEFT JOIN t_user u on d.depId=u.dept

    </select>


    <!--
      部门列表
    -->
    <select id="selectDeptList" resultMap="BaseResultMap" parameterType="Dept">
        select
        <include refid="Base_Column_List"/>
        FROM t_dept d
        <where>
            <if test="deptName !=null and deptName !=''">
                and deptName LIKE concat('%',#{deptName},'%')
            </if>

            <if test="status!=null and status!='' or status==0">
                and status=#{status}
            </if>
            <if test="beginTime !=null">
                <![CDATA[   and DATE_FORMAT(d.createTime, '%Y-%m-%d')>=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d')   ]]>
            </if>
            <if test="overTime !=null">
                <![CDATA[  and DATE_FORMAT(d.createTime, '%Y-%m-%d') <= DATE_FORMAT(#{overTime}, '%Y-%m-%d')    ]]>
            </if>
            AND status &gt;=0
        </where>
    </select>

    <!--
        批量删除
    -->
    <delete id="deleteByPrimaryKeys" parameterType="String">
        delete from t_dept
        where depId IN
        <foreach collection="array" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <!--
       添加
    -->
    <insert id="insert" parameterType="Dept">

    insert into t_dept (leader, deptName, introduce,
    createTime)
    values (#{leader}, #{deptName,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="Dept">
        insert into t_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="leader != null">
                leader,
            </if>
            <if test="deptName != null">
                deptName,
            </if>
            <if test="introduce != null">
                introduce,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="leader != null">
                #{leader,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null">
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Dept">

        update t_dept
        <set>
            <if test="deptName != null">
                deptName = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="leader != null">
                leader = #{leader,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where depId = #{depId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="Dept">

    update t_dept
    set deptName = #{deptName,jdbcType=VARCHAR},
    leader=#{leader}
      introduce = #{introduce,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
      status = #{status,jdbcType=INTEGER}
    where depId = #{depId,jdbcType=VARCHAR}
  </update>
</mapper>